# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test-mock-application:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor

    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true
    # docker:
    #   - image: circleci/python:3.10
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Run setup of example application instance.
          command: |
            cd ./examples/mock/
            ./test_entrypoint.sh
      - run:
          name: Build test image
          command: |
            cd ./test/gherkin/
            docker build . -t test:latest
      - run:
          name: Wait for service to be alive
          command: |
            # we are trying to check, via `dockerize`, if the service is ready.
            docker container run --network web \
              docker.io/jwilder/dockerize \
              -wait http://app:3000 \
              -wait-retry-interval 2s \
              -timeout 20s
      - run:
          name: Run Gherkin tests
          command: |
            docker container run --network web test:latest

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test_everything:
    jobs:
      - test-mock-application
